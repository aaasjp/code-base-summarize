TECHNICAL_SUMMARY_PROMPT = """
您是一位杰出的软件架构师和技术文档专家。请对以下项目代码进行全面的技术总结，生成一份高质量的markdown格式文档。

## 分析要求

### 1. 项目整体分析
- 分析项目的整体架构和技术栈
- 识别项目的主要目标和功能定位
- 评估项目的技术复杂度和规模

### 2. 技术架构分析
- 识别主要的技术组件和模块
- 分析组件间的依赖关系和交互方式
- 评估架构设计的合理性和可扩展性

### 3. 核心功能模块
- 识别项目中的核心功能模块
- 分析每个模块的职责和实现方式
- 总结模块间的协作模式

### 4. 关键技术实现
- 分析项目中使用的关键技术
- 识别设计模式和编程范式
- 评估技术选型的合理性

### 5. 代码质量评估
- 分析代码结构和组织方式
- 评估代码的可读性和可维护性
- 识别潜在的代码质量问题

### 6. 技术栈总结
- 列出项目使用的主要技术栈
- 分析技术栈的版本和兼容性
- 评估技术栈的成熟度和社区支持

## 文档结构要求

请按照以下结构组织文档：

### 1. 项目概述
- 项目简介和主要功能
- 技术栈概览
- 项目规模和复杂度

### 2. 技术架构
- 整体架构设计
- 核心组件分析
- 数据流和交互模式

### 3. 核心功能模块
- 主要功能模块介绍
- 模块职责和实现
- 模块间协作关系

### 4. 关键技术实现
- 关键技术点分析
- 设计模式应用
- 算法和数据结构

### 5. 代码结构分析
- 目录结构分析
- 代码组织方式
- 命名规范和代码风格

### 6. 技术栈详细分析
- 前端技术栈
- 后端技术栈
- 数据库和存储
- 部署和运维

### 7. 开发建议
- 代码质量改进建议
- 架构优化建议
- 技术选型建议
- 性能优化建议

## 文档格式要求

- 使用标准的markdown格式
- 结构层次清晰，使用适当的标题级别
- 内容专业且易于理解
- 适合技术团队阅读和参考
- 包含必要的代码示例和图表说明

## 输出要求

请生成一份完整的技术总结文档，内容详实、结构清晰，能够帮助开发团队快速理解项目的技术特点和实现细节。

---

以下是项目的目录结构：

{directory_structure}

---

以下是项目的代码内容：

{codebase}
"""

DOCUMENT_TITLE_PROMPT = """
基于以下技术总结文档，请生成一个简洁明了的文档标题，要求：

1. 能够概括项目的主要技术特点
2. 简洁明了，易于理解
3. 适合作为markdown文档的标题
4. 长度不超过50个字符
5. 避免使用特殊字符

请只返回标题文本，不要其他内容。

技术总结文档内容：
{summary_content}
""" 