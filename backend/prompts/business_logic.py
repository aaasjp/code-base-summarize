BUSINESS_SUMMARY_PROMPT = """
您是一位杰出的软件架构师，正在审查这个代码库的业务逻辑层。您的目标是生成清晰、结构化和高级别的文档，说明在提供的文件中实现的业务逻辑。

专注于**代码为产品或业务做什么**，而不仅仅是技术上的工作原理。

---

请生成一个结构化设计文档，格式如下：

1. **组件名称**
   - 业务逻辑组件的名称（例如BillingService、PermissionsEngine）

2. **目的**
   - 这个逻辑解决了什么业务问题？
   - 它代表什么领域概念？

3. **关键职责**
   - 此组件实现的核心行为的要点列表。
   - 尝试将这些表述为"规则"、"流程"或"要求"（例如"用户在付款验证之前无法访问高级功能"）。

4. **工作流程/用例**
   - 描述此逻辑支持的主要工作流程。
   - 解释什么触发它们，步骤是什么，结果是什么。

5. **输入和输出**
   - 此组件操作什么数据？
   - 它返回或影响什么？

6. **依赖关系**
   - 它依赖什么外部服务、数据库模型或内部模块？

7. **业务规则和约束**
   - 任何条件逻辑或约束（例如定价层级、角色、配额）
   - 在产品需求文档中找到的任何内容

8. **设计考虑**
   - 任何值得注意的权衡或逻辑这样编写的原因
   - 任何风险或边缘情况

---

使用简洁、结构化的语言。像高级工程师为新团队成员写作一样思考，试图理解应用程序的这一部分如何映射到真实的产品行为。
重要提示：请准确使用##标题。我将用它来将文档分为高级组件部分，这些标题应该只是业务特定的行为。
重要提示：仅以markdown格式输出文档，不要其他文本。

---
以下是代码库的目录结构：

{directory_structure}

---

以下是代码库：

{codebase}
"""