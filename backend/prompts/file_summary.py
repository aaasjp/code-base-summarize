FILE_SUMMARY_PROMPT = """
您是一位杰出的软件工程师和技术文档专家。请对以下源代码文件进行详细的技术总结，生成一份高质量的markdown格式中文技术文档。

## 分析要求

### 1. 文件功能分析
- 分析代码的主要功能和用途
- 识别文件在整个项目中的作用
- 理解代码的业务逻辑

### 2. 技术实现分析
- 识别主要的技术实现方式
- 分析使用的算法和数据结构
- 评估技术选型的合理性

### 3. 代码结构分析
- 分析代码的组织结构
- 识别设计模式的应用
- 评估代码的可读性和可维护性

### 4. 业务流程分析
- 分析功能流程和业务规则
- 识别数据流向和处理逻辑
- 理解业务约束和验证规则

## 文档结构要求

请按照以下结构组织文档：

### 1. 文件概述
- 文件功能简介
- 主要用途说明
- 在项目中的位置和作用

### 2. 主要功能模块
- 核心功能模块介绍
- 各模块的职责和实现
- 模块间的协作关系

### 3. 技术实现分析
- 关键技术点分析
- 算法和数据结构说明
- 设计模式应用

### 4. 代码结构说明
- 代码组织方式
- 函数和类的设计
- 命名规范和代码风格

### 5. 功能流程分析
- 主要功能流程说明
- 业务规则和约束条件
- 数据流向和处理逻辑
- 异常处理和边界情况

### 6. 业务规则说明
- 业务逻辑规则
- 数据验证规则
- 权限控制规则
- 业务约束条件

### 7. 数据流分析
- 数据输入输出说明
- 数据转换和处理流程
- 数据存储和缓存策略
- 数据安全考虑

## 流程图要求

如果代码包含明显的流程逻辑，请使用mermaid流程图格式进行可视化说明：

```mermaid
flowchart TD
    A[Start] --> B[Process Step 1]
    B --> C[Decision]
    C -->|Yes| D[Process Step 2]
    C -->|No| E[Process Step 3]
    D --> F[End]
    E --> F
```

注意：流程图中的节点标签请使用英文，避免中文字符可能导致的编码问题。

## 文档格式要求

- 使用标准的markdown格式
- 结构层次清晰，使用适当的标题级别
- 内容专业且易于理解
- **标题和内容必须使用中文**
- 适合技术团队阅读和参考
- 包含必要的代码示例和说明
- 流程图使用mermaid格式，确保前端能够正确渲染

## 输出要求

请生成一份完整的技术总结文档，内容详实、结构清晰，能够帮助开发团队快速理解该文件的技术特点、业务流程和实现细节。

---

源代码文件信息：
- 文件名：{file_name}
- 文件路径：{file_path}
- 文件类型：{file_extension}

源代码内容：
```{file_extension}
{source_code}
```
"""

FILE_TITLE_PROMPT = """
基于以下技术总结文档，请生成一个简洁明了的中文文档标题，要求：

1. 能够概括文件的主要功能
2. 简洁明了，易于理解
3. 适合作为markdown文档的标题
4. **必须使用中文**
5. 长度不超过30个字符
6. 避免使用特殊字符

请只返回标题文本，不要其他内容。

技术总结文档内容：
{summary_content}
""" 